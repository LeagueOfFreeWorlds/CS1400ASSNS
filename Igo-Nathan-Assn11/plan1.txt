#Requirements:
The program is a simulation of a strange species called "Orbians". When first ran,
the program will display a title menu:
"WELCOME TO ORBIAN FAMILY"
From there, the user has to hit the Enter key (or really any key) to start the orbian
creation menu. The menu is a list of 7 options for the user to choose:
1. "Meet Orbian Family"
    User has the option to see a list of all of the Orbians with their respective
    names.

2. "Compare Orbians"
    User has the option to compare one Orbian's size (volume) with another.

3. "Orbian Info"
    User has the option to see the size (volume), height, and age of their Orbians.

4.  "Create Orbian Baby"
    User has the option to append a new Orbian to the Orbian family by taking the
    characteristics of one Orbian parent, and another.

5. "Send to Pasture"
    User has the option to "retire" an Orbian to a pasture, thereby removing it
    from the list of Orbians within the family.

6. "Orbian Thanos"
    User has the option to kill 50% of the Orbian family population. This option
    will randomly select 50% of the Orbians and remove them from the list.

7. "Quit"
    Program ends.

The menu will continue to print so long as the user has not chosen to quit the
program.

## Analysis:
The program is comprised of two files that run the program. The main file (task1.py)
is responsible for printing the menu, getting user inputs, and displaying results
that the user wants to see. The orbian.py file contains all of the functions and
characteristics of Orbian objects. This includes name, volume, radius and height.
These characteristics are used within the main() so that the user can see and change
the progress of their Orbian family.
As time progresses, the size of the Orbians will change as they get older. Orbian
ages are measured in imaginary units called "zungs," which is equal to 5 seconds.
After an Orbian becomes 2 zungs old (10 seconds), they will have matriculated,
doubling in size, and tripling in height. Afer this, the Orbian doesn't grow or
change anymore.
## Design:
The Orbian family program design is relatively simple. It only has the user as its
input, and time is used to govern the age of the Orbians. From within the menu, the user can see their Orbian family (selecting option 1).
    Orbians are displayed from the Orbian() object list, by using the .getName() method within the Orbian class. getName() will then return the entire names of the orbians within the list:
        Orbian(name, head_radius, body_radius, body_height)
    getName() simply returns the name instances of the Orbian objects, and then concatenated in a print function for the user to see.
Comparing orbians takes the height values of one Orbian object, and another Orbian that a user wishes to compare with, and then uses a __gt__ dunder to compare the height instances of the two Orbians.
    return (first object volume instance) > (second object volume instance)
The user is able to select what Orbian they wish to display with a simple function (selectOrbian)
that returns index based on a printed list of Orbians.

Obtaining Orbian info is done in a manner similar to the previous operations
described above. The info function located within the main() file retrieves three
instances from an Orbian object requested by the user. selectOrbian is used to
display a list of Orbians for the user to choose which one they want to see
information about. Once the user has chosen what Orbian they want to see information
about, the program will then take information instances (name, age, size). These
instances are then printed as a concatenated string to the terminal.
    print("Orbian " + orbian.getName() + " is " + str(orbian.getAge()) + " zungs old")
    print("\tand is " + str(orbian.getVolume()) + " zogs, and " + str(len(orbian)) + " zings")
Creating a new Orbian child is another functionality of the Orbian class object.
A user will first choose two Orbians to become the parent using the selectOrbian
function. From there, we take advantage of dunders to create a new Orbian child,
by using the '+' operator.
    The __add__ operator will retrieve the name and size of the two Orbian parents,
    and then proceed to output the sum of the two parent sizes multiplied by a
    constant.
        headR = (self.__HEAD_RADIUS + other.__getHeadRadius()) * 0.25
        bodyR = (self.__BODY_RADIUS + other.__getBodyRadius()) * 0.25
        bodyH = (self.__BODY_HEIGHT + other.__getBodyHeight()) * 0.125
    The name of the new orbian child is equal to a randomly shuffled list of the
    two parents' names.
        app = list(self.__NAME + other.getName())
    The dunder then returns a new Orbian object to be added to the family list.
Using the famList of Orbian objects, the rest of the operations that the user can
perform works in a similar manner to the previous four options described.
Essentially, with options 5 and 6, we simply use the .remove() del() functions to
remove Orbians from the famList, since 5 retires an Orbian of choice by the user,
while 6 removes 50% of the Orbian population randomly selected.

## Testing:
1. Testing "Meet Orbian Family"
    Selecting option 1:
        I am Orbian Deborah
        I am Orbian Linus
        I am Orbian Jones
        I am Orbian Cassie
2. Compare Orbians
    Selecting option 2:
        1) Deborah
        2) Linus
        3) Jones
        4) Cassie
    Select an Orbian:
        Select an Orbian: 1
        1) Deborah
        2) Linus
        3) Jones
        4) Cassie
    Select an Orbian: 4
        Orbian Deborah is bigger than Orbian Cassie
3. Orbian info
    Selecting option 3:
        Select an Orbian to view
        1) Deborah
        2) Linus
        3) Jones
        4) Cassie
    Select an Orbian:
        Orbian Linus is 9 zungs old
        and is 370110 zogs, and 19 zings
    Testing again ~30 seconds later:
        Orbian Linus is 16 zungs old
        and is 370110 zogs, and 19 zings
4. Create Orbian Baby
    Selecting option 3:

        1) Deborah
        2) Linus
        3) Jones
        4) Cassie
    Select an Orbian: 2
        1) Deborah
        2) Linus
        3) Jones
        4) Cassie
    Select an Orbian: 4
        Greetings Orbian Siale
    Checking Orbian Info:
    Orbian Siale is 1 zungs old
        and is 1263 zogs, and 7 zings
5. Send to Pasture
    Selecting option 5:
        Select which Orbian you wish to retire to the pasture
        1) Deborah
        2) Linus
        3) Jones
        4) Cassie
    Select an Orbian: 1
        Farwell dear Deborah.....
    Checking with "Meet Orbian Family:"
        I am Orbian Linus
        I am Orbian Jones
        I am Orbian Cassie
6. Orbian Thanos
    Selecting option 6:
        Uh oh. Orbian Thanos just snapped his fingers.....
    Checking with "Meet Orbian Family:"
        I am Orbian Linus
        I am Orbian Jones



